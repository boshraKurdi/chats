{"version":3,"file":"static/js/137.2310ae7b.chunk.js","mappings":"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","sources":["Components/LoadingPage/LoadingPage.js","Components/Chat/Content/Content.js","Components/Chat/SideBar/Content/Content.js","Components/Skeleton/ChatSkeleton.js","Components/Skeleton/HeaderChatSkeleton.js","Components/SkeletonLoading/SkeletonLoading.js","Components/Chat/SideBar/SideBar.js","Style/Components/Components.js","Pages/Chat/Chat.js"],"sourcesContent":["import \"./LoadingPage.css\";\r\nexport default function LoadingPage() {\r\n  return (\r\n    /* From Uiverse.io by david-mohseni */\r\n    <div class=\"loader-page\">\r\n      <div class=\"bar1\"></div>\r\n      <div class=\"bar2\"></div>\r\n      <div class=\"bar3\"></div>\r\n      <div class=\"bar4\"></div>\r\n      <div class=\"bar5\"></div>\r\n      <div class=\"bar6\"></div>\r\n      <div class=\"bar7\"></div>\r\n      <div class=\"bar8\"></div>\r\n      <div class=\"bar9\"></div>\r\n      <div class=\"bar10\"></div>\r\n      <div class=\"bar11\"></div>\r\n      <div class=\"bar12\"></div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./Content.css\";\r\nimport KeyboardVoiceIcon from \"@mui/icons-material/KeyboardVoice\";\r\nimport AttachFileIcon from \"@mui/icons-material/AttachFile\";\r\nimport SentimentSatisfiedAltIcon from \"@mui/icons-material/SentimentSatisfiedAlt\";\r\nimport SendIcon from \"@mui/icons-material/Send\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ActGetMessages, addMessage } from \"../../../Redux/Chat/ChatSlice\";\r\nimport LoadingPage from \"../../LoadingPage/LoadingPage\";\r\nimport { useTheme } from \"@emotion/react\";\r\n\r\nexport default function Content({id}) {\r\n  const theme = useTheme()\r\n  const endRef = useRef(null);\r\n  const [form , setForm] = useState({ id: 10, chat_id: id , is_f: 0, f_id: 2 , text: \"\" })\r\n  const { value } = useSelector((state) => state.mode);\r\n  const dispatch = useDispatch();\r\n  const { messages, loading2 } = useSelector((state) => state.chat);\r\n  useEffect(() => {\r\n    dispatch(ActGetMessages(id));\r\n  }, [dispatch , id]);\r\n  useEffect(() => {\r\n    endRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, []);\r\n  let newData = messages.map((message) => {\r\n    return (\r\n      <div key={message.id} className={message.is_f ? (value === 'light' ? \"chat-msg light\" : 'chat-msg dark') : (value === 'light' ? \"chat-msg user light\" : 'chat-msg user dark')}>\r\n        <p>{message.text}</p>\r\n        <span className=\"time\">06:04 PM</span>\r\n      </div>\r\n    );\r\n  });\r\n  function HandelMessage(e ,data){\r\n    e.preventDefault()\r\n    dispatch(addMessage(data));\r\n    setForm({...form , text: ''})\r\n  }\r\n  return (\r\n    <>\r\n      {loading2 === \"pending\" ? (\r\n        <LoadingPage />\r\n      ) : (\r\n        <>\r\n          <div className=\"chat-container\">{newData}</div>\r\n          <div ref={endRef}></div>\r\n          <div className=\"message-box\">\r\n            <form style={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <div style={{backgroundColor: theme.palette.primary.main}} className=\"message-content\">\r\n                <SentimentSatisfiedAltIcon />\r\n                <input type=\"text\" name=\"text\" value={form.text} onChange={(e)=>{setForm({...form , text:e.target.value})}} />\r\n                <AttachFileIcon />\r\n                <KeyboardVoiceIcon />\r\n              </div>\r\n              <button onClick={(e)=>{HandelMessage(e , form)}} style={{ marginLeft: \"1rem\" }} className=\"micro\">\r\n                <SendIcon />\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import Image from '../../../../Img/about-coach.jpg'\r\nimport { useDispatch } from \"react-redux\";\r\nimport { SetParams } from \"../../../../Redux/Mode/ModeSlice\";\r\nimport { memo } from 'react';\r\n\r\nconst Content = memo(({chat})=>{\r\n  const dispatch = useDispatch()\r\n    return(\r\n        <div onClick={()=>{dispatch(SetParams(chat.id))}} className=\"chat-box\" id=\"Msg\">\r\n            <div className=\"chat-img\">\r\n              <img src={Image} alt=\"\" />\r\n            </div>\r\n            <div className=\"chat-details\">\r\n              <div className=\"chat-title\">\r\n                <h3>{chat.f_name}</h3>\r\n                <span>06:04 PM</span>\r\n              </div>\r\n              <div className=\"chat-msg\">\r\n                <p>{chat.lastMessage}</p>\r\n                <span>1</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n    )\r\n})\r\nexport default Content","import Skeleton from \"@mui/material/Skeleton\";\r\nimport Stack from \"@mui/material/Stack\";\r\n\r\nexport default function ChatSkeleton() {\r\n  const numberRender = Array(5)\r\n    .fill(0)\r\n    .map((_, index) => {\r\n      return (\r\n        <div key={index} style={{ display: \"flex\", alignItems: \"center\" , marginLeft: '1rem' }}>\r\n          <Stack\r\n            spacing={1}\r\n            style={{\r\n              marginRight: \"2rem\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Skeleton\r\n              variant=\"rounded\"\r\n              sx={{ borderRadius: \"50%\" }}\r\n              width={50}\r\n              height={50}\r\n            />\r\n          </Stack>\r\n          <Stack spacing={1} style={{ flex: \"1\" }}>\r\n            <Skeleton variant=\"text\" width={150} sx={{ fontSize: \"1rem\" }} />\r\n            <Skeleton variant=\"text\" width={150} sx={{ fontSize: \"1rem\" }} />\r\n          </Stack>\r\n        </div>\r\n      );\r\n    });\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        gap:'2rem' ,\r\n        flexDirection: \"column\",\r\n      }}\r\n    >\r\n      {numberRender}\r\n    </div>\r\n  );\r\n}\r\n","import Skeleton from \"@mui/material/Skeleton\";\r\nimport Stack from \"@mui/material/Stack\";\r\n\r\nexport default function HeaderChatSkeleton() {\r\n  return (\r\n    <div style={{ display: \"flex\", alignItems: \"center\", marginLeft: \"1rem\" }}>\r\n      <Stack\r\n        spacing={1}\r\n        style={{\r\n          marginRight: \"2rem\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <Skeleton\r\n          variant=\"rounded\"\r\n          sx={{ borderRadius: \"50%\" }}\r\n          width={50}\r\n          height={50}\r\n        />\r\n      </Stack>\r\n      <Stack spacing={1} style={{ flex: \"1\" }}>\r\n        <Skeleton variant=\"text\" width={150} sx={{ fontSize: \"1rem\" }} />\r\n        <Skeleton variant=\"text\" width={150} sx={{ fontSize: \"1rem\" }} />\r\n      </Stack>\r\n    </div>\r\n  );\r\n}\r\n","import ChatSkeleton from \"../Skeleton/ChatSkeleton\";\r\nimport HeaderChatSkeleton from \"../Skeleton/HeaderChatSkeleton\";\r\n\r\nexport default function SkeletonLoading({loading , error ='' , children , type}){\r\n    const typeLoading = {\r\n        chat: ChatSkeleton ,\r\n        headerChat: HeaderChatSkeleton\r\n    }\r\n    const Component = typeLoading[type];\r\n    if (loading === 'pending') {\r\n        return <Component />    \r\n    }\r\n    if (loading === 'failed') {\r\n        return \"error\"\r\n    }\r\n    return(\r\n        <>{children}</>\r\n    )\r\n\r\n}","import \"../Chat.css\";\r\nimport \"./SideBar.css\";\r\nimport CreateIcon from \"@mui/icons-material/Create\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { memo, useCallback, useEffect, useState } from \"react\";\r\nimport { ActGetChat } from \"../../../Redux/Chat/ChatSlice\";\r\nimport Content from \"./Content/Content\";\r\nimport SkeletonLoading from \"../../SkeletonLoading/SkeletonLoading\";\r\nimport BrightnessMediumIcon from '@mui/icons-material/BrightnessMedium';\r\nimport Brightness4Icon from '@mui/icons-material/Brightness4';\r\nimport { SetMode, SetOpen } from \"../../../Redux/Mode/ModeSlice\";\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { useTheme } from \"@emotion/react\";\r\nconst SideBar = memo(()=> {\r\n  const theme = useTheme();\r\n  const dispatch = useDispatch()\r\n  const { myChats , loading } = useSelector((state) => state.chat)\r\n  const { value , open } = useSelector((state)  => state.mode)\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const filteredChats = searchTerm\r\n  ? myChats.filter(chat => \r\n      chat.f_name.toLowerCase().includes(searchTerm.toLowerCase()) \r\n    )\r\n  : myChats;\r\n  const newData = filteredChats.map((chat) => {\r\n    return(\r\n      <Content key={chat.id} chat={chat} />\r\n    )\r\n  })\r\n  useEffect(()=>{\r\n    dispatch(ActGetChat());\r\n  } ,[dispatch])\r\n  const handleSearchChange = useCallback((e) => {\r\n    setSearchTerm(e.target.value);\r\n  }, []);\r\n  const modeValue = (value === 'light') ? 'dark' : 'light'\r\n  return (\r\n    <div style={{backgroundColor: theme.palette.primary.main}} className={open ? \"right-side open\" : 'right-side'}>\r\n      <div className=\"before\"></div>\r\n      <div style={{backgroundColor: theme.palette.primary.main,}}  className=\"header-container\">\r\n        <div className=\"chat_header\">\r\n          <div className=\"toggle-button\" onClick={()=>{dispatch(SetMode(modeValue))}}>\r\n            {value === 'light' ? <BrightnessMediumIcon /> : <Brightness4Icon />}\r\n          </div>\r\n          <div className=\"search-box\">\r\n            <SearchIcon />\r\n            <input value={searchTerm} onChange={handleSearchChange} type=\"text\" placeholder=\"Search\" />\r\n          </div>\r\n          <CloseIcon className=\"close\" onClick={()=>{dispatch(SetOpen())}}/>\r\n        </div>\r\n      </div>\r\n      <div className=\"body-container\">\r\n        <div className=\"chat-list\">\r\n        <SkeletonLoading loading={loading} type=\"chat\">\r\n          {newData}\r\n        </SkeletonLoading>\r\n        </div>\r\n      </div>\r\n      <div className=\"pen\">\r\n        <CreateIcon />\r\n      </div>\r\n    </div>\r\n  );\r\n})\r\nexport default SideBar","import { styled } from \"@mui/material/styles\";\r\nconst Components = () =>{\r\n    const MyComponentHeroSubtitle = styled(\"p\")(({ theme }) => ({\r\n        backgroundColor: theme.palette.primary.secondy,\r\n      }));\r\n      const MyComponentHeroSubtitleH3 = styled(\"h3\")(({ theme }) => ({\r\n        color: theme.palette.primary.light,\r\n      }));\r\n      const MyComponentHeroSubtitleA = styled(\"a\")(({ theme }) => ({\r\n        backgroundColor: theme.palette.primary.secondy,\r\n      }));\r\n      const MyComponentHeader = styled(\"header\")(({ theme }) => ({\r\n        color: \"#fff\",\r\n        backgroundColor: theme.palette.primary.main,\r\n      }));\r\n      const MyComponentDivHeader = styled(\"div\")(({ theme }) => ({\r\n        backgroundColor: theme.palette.primary.main,\r\n      }));\r\n      const MyComponentTitle = styled(\"h1\")(({ theme }) => ({\r\n        color: theme.palette.primary.title,\r\n      }));\r\n      const MyComponentTextP = styled(\"p\")(({ theme }) => ({\r\n        color: theme.palette.primary.contrastText,\r\n      }));\r\n      const MyComponentContainerLoader = styled(\"div\")(({ theme }) => ({\r\n        background: theme.palette.primary.bg,\r\n      }));\r\n    return { MyComponentDivHeader , MyComponentContainerLoader , MyComponentHeroSubtitleH3 , MyComponentHeroSubtitle , MyComponentHeader , MyComponentTitle , MyComponentTextP , MyComponentHeroSubtitleA }  \r\n}\r\nexport default Components","import \"./Chat.css\";\r\nimport Content from \"../../Components/Chat/Content/Content\";\r\nimport SideBar from \"../../Components/Chat/SideBar/SideBar\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport PhoneIcon from \"@mui/icons-material/Phone\";\r\nimport HorizontalSplitIcon from \"@mui/icons-material/HorizontalSplit\";\r\nimport Components from \"../../Style/Components/Components\";\r\nimport Image from '../../Img/about-coach.jpg'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { ActShow } from \"../../Redux/Chat/ChatSlice\";\r\nimport SkeletonLoading from \"../../Components/SkeletonLoading/SkeletonLoading\";\r\nimport { SetOpen } from \"../../Redux/Mode/ModeSlice\";\r\nexport default function Chat() {\r\n  const { MyComponentDivHeader } = Components();\r\n  const { params } = useSelector((state)=> state.mode)\r\n  const dispatch = useDispatch()\r\n  const { myChat , loading3 } = useSelector((state) => state.chat)\r\n  useEffect(() => {\r\n    dispatch(ActShow(params))\r\n  } ,[dispatch , params])\r\n  const { value } = useSelector((state) => state.mode);\r\n  return (\r\n    <main className=\"chat\">\r\n      <SideBar />\r\n      <section\r\n        className={\r\n          value === \"light\" ? \"chat_content light\" : \"chat_content dark\"\r\n        }\r\n      >\r\n        <div className=\"chat_container\" id=\"chatBox\">\r\n          <MyComponentDivHeader className=\"content-header\">\r\n            <HorizontalSplitIcon\r\n              className=\"barsChat\"\r\n              onClick={()=>{dispatch(SetOpen())}}\r\n              style={{ fontSize: \"3rem\" }}\r\n            />\r\n            <SkeletonLoading loading={loading3} type=\"headerChat\">\r\n              <div className=\"image\">\r\n                <img\r\n                  src={Image}\r\n                  alt=\"\"\r\n                />\r\n              </div>\r\n              <div className=\"details\">\r\n                <h3>{myChat.f_name}</h3>\r\n                <span>last seen 10 minutes ago</span>\r\n              </div>\r\n            </SkeletonLoading>\r\n            <div className=\"icons\">\r\n              <PhoneIcon />\r\n              <SearchIcon />\r\n            </div>\r\n          </MyComponentDivHeader>\r\n          <Content id={params} />\r\n        </div>\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n"],"names":["LoadingPage","_jsxs","class","children","_jsx","Content","_ref","id","theme","useTheme","endRef","useRef","form","setForm","useState","chat_id","is_f","f_id","text","value","useSelector","state","mode","dispatch","useDispatch","messages","loading2","chat","useEffect","ActGetMessages","_endRef$current","current","scrollIntoView","behavior","newData","map","message","className","_Fragment","ref","style","display","alignItems","backgroundColor","palette","primary","main","SentimentSatisfiedAltIcon","type","name","onChange","e","target","AttachFileIcon","KeyboardVoiceIcon","onClick","data","preventDefault","addMessage","HandelMessage","marginLeft","SendIcon","memo","SetParams","src","Image","alt","f_name","lastMessage","ChatSkeleton","numberRender","Array","fill","_","index","Stack","spacing","marginRight","justifyContent","Skeleton","variant","sx","borderRadius","width","height","flex","fontSize","gap","flexDirection","HeaderChatSkeleton","SkeletonLoading","loading","error","Component","headerChat","myChats","open","searchTerm","setSearchTerm","filter","toLowerCase","includes","ActGetChat","handleSearchChange","useCallback","modeValue","SetMode","BrightnessMediumIcon","Brightness4Icon","SearchIcon","placeholder","CloseIcon","SetOpen","CreateIcon","Components","MyComponentHeroSubtitle","styled","secondy","MyComponentHeroSubtitleH3","_ref2","color","light","MyComponentHeroSubtitleA","_ref3","MyComponentHeader","_ref4","MyComponentDivHeader","_ref5","MyComponentTitle","_ref6","title","MyComponentTextP","_ref7","contrastText","MyComponentContainerLoader","_ref8","background","bg","Chat","params","myChat","loading3","ActShow","SideBar","HorizontalSplitIcon","PhoneIcon"],"sourceRoot":""}