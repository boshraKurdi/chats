{"version":3,"file":"static/js/137.76942dfe.chunk.js","mappings":"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","sources":["Style/Components/Components.js","Components/LoadingPage/LoadingPage.js","Components/Chat/Content/Content.js","Components/Chat/SideBar/Content/Content.js","Components/Skeleton/ChatSkeleton.js","Components/Skeleton/HeaderChatSkeleton.js","Components/SkeletonLoading/SkeletonLoading.js","Components/Chat/SideBar/SideBar.js","Pages/Chat/Chat.js"],"sourcesContent":["import { styled } from \"@mui/material/styles\";\r\nconst Components = () =>{\r\n    const MyComponentHeroSubtitle = styled(\"p\")(({ theme }) => ({\r\n        backgroundColor: theme.palette.primary.secondy,\r\n      }));\r\n      const MyComponentHeroSubtitleH3 = styled(\"h3\")(({ theme }) => ({\r\n        color: theme.palette.primary.light,\r\n      }));\r\n      const MyComponentHeroSubtitleA = styled(\"a\")(({ theme }) => ({\r\n        backgroundColor: theme.palette.primary.secondy,\r\n      }));\r\n      const MyComponentHeader = styled(\"header\")(({ theme }) => ({\r\n        color: \"#fff\",\r\n        backgroundColor: theme.palette.primary.main,\r\n      }));\r\n      const MyComponentDivHeader = styled(\"div\")(({ theme }) => ({\r\n        backgroundColor: theme.palette.primary.main,\r\n      }));\r\n      const MyComponentTitle = styled(\"h1\")(({ theme }) => ({\r\n        color: theme.palette.primary.title,\r\n      }));\r\n      const MyComponentTextP = styled(\"p\")(({ theme }) => ({\r\n        color: theme.palette.primary.contrastText,\r\n      }));\r\n      const MyComponentContainerLoader = styled(\"div\")(({ theme }) => ({\r\n        background: theme.palette.primary.bg,\r\n      }));\r\n    return { MyComponentDivHeader , MyComponentContainerLoader , MyComponentHeroSubtitleH3 , MyComponentHeroSubtitle , MyComponentHeader , MyComponentTitle , MyComponentTextP , MyComponentHeroSubtitleA }  \r\n}\r\nexport default Components","import \"./LoadingPage.css\";\r\nexport default function LoadingPage() {\r\n  return (\r\n    /* From Uiverse.io by david-mohseni */\r\n    <div class=\"loader-page\">\r\n      <div class=\"bar1\"></div>\r\n      <div class=\"bar2\"></div>\r\n      <div class=\"bar3\"></div>\r\n      <div class=\"bar4\"></div>\r\n      <div class=\"bar5\"></div>\r\n      <div class=\"bar6\"></div>\r\n      <div class=\"bar7\"></div>\r\n      <div class=\"bar8\"></div>\r\n      <div class=\"bar9\"></div>\r\n      <div class=\"bar10\"></div>\r\n      <div class=\"bar11\"></div>\r\n      <div class=\"bar12\"></div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./Content.css\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport KeyboardVoiceIcon from \"@mui/icons-material/KeyboardVoice\";\r\nimport AttachFileIcon from \"@mui/icons-material/AttachFile\";\r\nimport SentimentSatisfiedAltIcon from \"@mui/icons-material/SentimentSatisfiedAlt\";\r\nimport SendIcon from \"@mui/icons-material/Send\";\r\nimport { useEffect, useRef } from \"react\";\r\n\r\nimport Components from \"../../../Style/Components/Components\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ActGetMessages } from \"../../../Redux/Chat/ChatSlice\";\r\nimport LoadingPage from \"../../LoadingPage/LoadingPage\";\r\n\r\nexport default function Content({id}) {\r\n  const endRef = useRef(null);\r\n  const { MyComponentDivHeader } = Components();\r\n  // const { value } = useSelector((state) => state.mode);\r\n  const { register } = useForm();\r\n  const dispatch = useDispatch();\r\n  const { messages, loading2 } = useSelector((state) => state.chat);\r\n  useEffect(() => {\r\n    dispatch(ActGetMessages(id));\r\n  }, [dispatch , id]);\r\n  useEffect(() => {\r\n    endRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, []);\r\n  let newData = messages.map((message) => {\r\n    return (\r\n      <div className={message.is_f ? \"chat-msg user light\" : \"chat-msg light\"}>\r\n        <p>{message.text}</p>\r\n        <span className=\"time\">06:04 PM</span>\r\n      </div>\r\n    );\r\n  });\r\n  return (\r\n    <>\r\n      {loading2 === \"pending\" ? (\r\n        <LoadingPage />\r\n      ) : (\r\n        <>\r\n          <div className=\"chat-container\">{newData}</div>\r\n          <div ref={endRef}></div>\r\n          <div className=\"message-box\">\r\n            <form style={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <MyComponentDivHeader className=\"message-content\">\r\n                <SentimentSatisfiedAltIcon />\r\n                <input type=\"text\" name=\"text\" {...register(\"text\")} />\r\n                <input type=\"hidden\" name=\"id\" {...register(\"id\")} />\r\n                <AttachFileIcon />\r\n                <KeyboardVoiceIcon />\r\n              </MyComponentDivHeader>\r\n              <button style={{ marginLeft: \"1rem\" }} className=\"micro\">\r\n                <SendIcon />\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import Image from '../../../../Img/about-coach.jpg'\r\nimport { useDispatch } from \"react-redux\";\r\nimport { SetParams } from \"../../../../Redux/Mode/ModeSlice\";\r\n\r\nexport default function Content({chat}){\r\n  const dispatch = useDispatch()\r\n    return(\r\n        <div onClick={()=>{dispatch(SetParams(chat.id))}} className=\"chat-box\" id=\"Msg\">\r\n            <div className=\"chat-img\">\r\n              <img src={Image} alt=\"\" />\r\n            </div>\r\n            <div className=\"chat-details\">\r\n              <div className=\"chat-title\">\r\n                <h3>{chat.f_name}</h3>\r\n                <span>06:04 PM</span>\r\n              </div>\r\n              <div className=\"chat-msg\">\r\n                <p>{chat.lastMessage}</p>\r\n                <span>1</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n    )\r\n}","import Skeleton from \"@mui/material/Skeleton\";\r\nimport Stack from \"@mui/material/Stack\";\r\n\r\nexport default function ChatSkeleton() {\r\n  const numberRender = Array(5)\r\n    .fill(0)\r\n    .map((_, index) => {\r\n      return (\r\n        <div style={{ display: \"flex\", alignItems: \"center\" , marginLeft: '1rem' }}>\r\n          <Stack\r\n            spacing={1}\r\n            style={{\r\n              marginRight: \"2rem\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Skeleton\r\n              variant=\"rounded\"\r\n              sx={{ borderRadius: \"50%\" }}\r\n              width={50}\r\n              height={50}\r\n            />\r\n          </Stack>\r\n          <Stack spacing={1} style={{ flex: \"1\" }}>\r\n            <Skeleton variant=\"text\" width={150} sx={{ fontSize: \"1rem\" }} />\r\n            <Skeleton variant=\"text\" width={150} sx={{ fontSize: \"1rem\" }} />\r\n          </Stack>\r\n        </div>\r\n      );\r\n    });\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        gap:'2rem' ,\r\n        flexDirection: \"column\",\r\n      }}\r\n    >\r\n      {numberRender}\r\n    </div>\r\n  );\r\n}\r\n","import Skeleton from \"@mui/material/Skeleton\";\r\nimport Stack from \"@mui/material/Stack\";\r\n\r\nexport default function HeaderChatSkeleton() {\r\n  return (\r\n    <div style={{ display: \"flex\", alignItems: \"center\", marginLeft: \"1rem\" }}>\r\n      <Stack\r\n        spacing={1}\r\n        style={{\r\n          marginRight: \"2rem\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <Skeleton\r\n          variant=\"rounded\"\r\n          sx={{ borderRadius: \"50%\" }}\r\n          width={50}\r\n          height={50}\r\n        />\r\n      </Stack>\r\n      <Stack spacing={1} style={{ flex: \"1\" }}>\r\n        <Skeleton variant=\"text\" width={150} sx={{ fontSize: \"1rem\" }} />\r\n        <Skeleton variant=\"text\" width={150} sx={{ fontSize: \"1rem\" }} />\r\n      </Stack>\r\n    </div>\r\n  );\r\n}\r\n","import ChatSkeleton from \"../Skeleton/ChatSkeleton\";\r\nimport HeaderChatSkeleton from \"../Skeleton/HeaderChatSkeleton\";\r\n\r\nexport default function SkeletonLoading({loading , error ='' , children , type}){\r\n    const typeLoading = {\r\n        chat: ChatSkeleton ,\r\n        headerChat: HeaderChatSkeleton\r\n    }\r\n    const Component = typeLoading[type];\r\n    if (loading === 'pending') {\r\n        return <Component />    \r\n    }\r\n    if (loading === 'failed') {\r\n        return \"error\"\r\n    }\r\n    return(\r\n        <>{children}</>\r\n    )\r\n\r\n}","import \"../Chat.css\";\r\nimport \"./SideBar.css\";\r\nimport CreateIcon from \"@mui/icons-material/Create\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\nimport Components from \"../../../Style/Components/Components\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { ActGetChat } from \"../../../Redux/Chat/ChatSlice\";\r\nimport Content from \"./Content/Content\";\r\nimport SkeletonLoading from \"../../SkeletonLoading/SkeletonLoading\";\r\nexport default function SideBar() {\r\n  const { MyComponentDivHeader } = Components();\r\n  const dispatch = useDispatch()\r\n  const { myChats , loading } = useSelector((state) => state.chat)\r\n  const newData = myChats.chat.length > 0 && myChats.chat.map((chat) => {\r\n    return(\r\n      <Content key={chat.id} chat={chat} />\r\n    )\r\n  })\r\n  console.log(myChats)\r\n  useEffect(()=>{\r\n    dispatch(ActGetChat());\r\n  } ,[dispatch])\r\n  return (\r\n    <MyComponentDivHeader className=\"right-side\">\r\n      <MyComponentDivHeader className=\"header-container\">\r\n        <div className=\"chat_header\">\r\n          <div className=\"toggle-button\">\r\n            <ArrowBackIcon />\r\n          </div>\r\n          <div className=\"search-box\">\r\n            <SearchIcon />\r\n            <input type=\"text\" placeholder=\"Search\" />\r\n          </div>\r\n        </div>\r\n      </MyComponentDivHeader>\r\n      <div className=\"body-container\">\r\n        <div className=\"chat-list\">\r\n        <SkeletonLoading loading={loading} type=\"chat\">\r\n          {newData}\r\n        </SkeletonLoading>\r\n        </div>\r\n      </div>\r\n      <div className=\"pen\">\r\n        <CreateIcon />\r\n      </div>\r\n    </MyComponentDivHeader>\r\n  );\r\n}\r\n","import \"./Chat.css\";\r\nimport Content from \"../../Components/Chat/Content/Content\";\r\nimport SideBar from \"../../Components/Chat/SideBar/SideBar\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport PhoneIcon from \"@mui/icons-material/Phone\";\r\nimport HorizontalSplitIcon from \"@mui/icons-material/HorizontalSplit\";\r\nimport Components from \"../../Style/Components/Components\";\r\nimport Image from '../../Img/about-coach.jpg'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { ActShow } from \"../../Redux/Chat/ChatSlice\";\r\nimport SkeletonLoading from \"../../Components/SkeletonLoading/SkeletonLoading\";\r\nexport default function Chat() {\r\n  const { MyComponentDivHeader } = Components();\r\n  const { params } = useSelector((state)=> state.mode)\r\n  const dispatch = useDispatch()\r\n  const { myChat , loading3 } = useSelector((state) => state.chat)\r\n  useEffect(() => {\r\n    dispatch(ActShow(params))\r\n  } ,[dispatch , params])\r\n\r\n  console.log(params)\r\n  // const { value } = useSelector((state) => state.mode);\r\n  return (\r\n    <main className=\"chat\">\r\n      <SideBar />\r\n      <section\r\n        className={\r\n          \"light\" === \"light\" ? \"chat_content light\" : \"chat_content dark\"\r\n        }\r\n      >\r\n        <div className=\"chat_container\" id=\"chatBox\">\r\n          <MyComponentDivHeader className=\"content-header\">\r\n            <HorizontalSplitIcon\r\n              className=\"barsChat\"\r\n              style={{ fontSize: \"3rem\" }}\r\n            />\r\n            <SkeletonLoading loading={loading3} type=\"headerChat\">\r\n              <div className=\"image\">\r\n                <img\r\n                  src={Image}\r\n                  alt=\"\"\r\n                />\r\n              </div>\r\n              <div className=\"details\">\r\n                <h3>{myChat[0].f_name}</h3>\r\n                <span>last seen 10 minutes ago</span>\r\n              </div>\r\n            </SkeletonLoading>\r\n            <div className=\"icons\">\r\n              <PhoneIcon />\r\n              <SearchIcon />\r\n            </div>\r\n          </MyComponentDivHeader>\r\n          <Content id={params} />\r\n        </div>\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n"],"names":["Components","MyComponentHeroSubtitle","styled","_ref","theme","backgroundColor","palette","primary","secondy","MyComponentHeroSubtitleH3","_ref2","color","light","MyComponentHeroSubtitleA","_ref3","MyComponentHeader","_ref4","main","MyComponentDivHeader","_ref5","MyComponentTitle","_ref6","title","MyComponentTextP","_ref7","contrastText","MyComponentContainerLoader","_ref8","background","bg","LoadingPage","_jsxs","class","children","_jsx","Content","id","endRef","useRef","register","useForm","dispatch","useDispatch","messages","loading2","useSelector","state","chat","useEffect","ActGetMessages","_endRef$current","current","scrollIntoView","behavior","newData","map","message","className","is_f","text","_Fragment","ref","style","display","alignItems","SentimentSatisfiedAltIcon","type","name","AttachFileIcon","KeyboardVoiceIcon","marginLeft","SendIcon","onClick","SetParams","src","Image","alt","f_name","lastMessage","ChatSkeleton","numberRender","Array","fill","_","index","Stack","spacing","marginRight","justifyContent","Skeleton","variant","sx","borderRadius","width","height","flex","fontSize","gap","flexDirection","HeaderChatSkeleton","SkeletonLoading","loading","error","Component","headerChat","SideBar","myChats","length","console","log","ActGetChat","ArrowBackIcon","SearchIcon","placeholder","CreateIcon","Chat","params","mode","myChat","loading3","ActShow","HorizontalSplitIcon","PhoneIcon"],"sourceRoot":""}