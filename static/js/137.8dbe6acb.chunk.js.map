{"version":3,"file":"static/js/137.8dbe6acb.chunk.js","mappings":"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","sources":["Components/LoadingPage/LoadingPage.js","Components/Chat/Content/Content.js","Components/Chat/SideBar/Content/Content.js","Components/Skeleton/ChatSkeleton.js","Components/Skeleton/HeaderChatSkeleton.js","Components/SkeletonLoading/SkeletonLoading.js","Components/Chat/SideBar/SideBar.js","Style/Components/Components.js","Pages/Chat/Chat.js"],"sourcesContent":["import \"./LoadingPage.css\";\r\nexport default function LoadingPage() {\r\n  return (\r\n    /* From Uiverse.io by david-mohseni */\r\n    <div class=\"loader-page\">\r\n      <div class=\"bar1\"></div>\r\n      <div class=\"bar2\"></div>\r\n      <div class=\"bar3\"></div>\r\n      <div class=\"bar4\"></div>\r\n      <div class=\"bar5\"></div>\r\n      <div class=\"bar6\"></div>\r\n      <div class=\"bar7\"></div>\r\n      <div class=\"bar8\"></div>\r\n      <div class=\"bar9\"></div>\r\n      <div class=\"bar10\"></div>\r\n      <div class=\"bar11\"></div>\r\n      <div class=\"bar12\"></div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./Content.css\";\r\nimport KeyboardVoiceIcon from \"@mui/icons-material/KeyboardVoice\";\r\nimport AttachFileIcon from \"@mui/icons-material/AttachFile\";\r\nimport SentimentSatisfiedAltIcon from \"@mui/icons-material/SentimentSatisfiedAlt\";\r\nimport SendIcon from \"@mui/icons-material/Send\";\r\nimport EmojiPicker from 'emoji-picker-react';\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ActGetMessages, addMessage } from \"../../../Redux/Chat/ChatSlice\";\r\nimport LoadingPage from \"../../LoadingPage/LoadingPage\";\r\nimport { useTheme } from \"@emotion/react\";\r\n\r\nexport default function Content({id}) {\r\n  const theme = useTheme()\r\n  const [active , setActive] = useState(false)\r\n  const [form , setForm] = useState({ id: 10, chat_id: id , is_f: 0, f_id: 2 , text: \"\" })\r\n  const { value } = useSelector((state) => state.mode);\r\n  const dispatch = useDispatch();\r\n  const { messages, loading2 } = useSelector((state) => state.chat);\r\n  const lastMessageRef = useRef(null);\r\n  useEffect(() => {\r\n    dispatch(ActGetMessages(id));\r\n  }, [dispatch , id]);\r\n  let newData = messages.map((message) => {\r\n    return (\r\n      <div key={message.id} className={message.is_f ? (value === 'light' ? \"chat-msg light\" : 'chat-msg dark') : (value === 'light' ? \"chat-msg user light\" : 'chat-msg user dark')}>\r\n        <p>{message.text}</p>\r\n        <span className=\"time\">06:04 PM</span>\r\n      </div>\r\n    );\r\n  });\r\n\r\nuseEffect(() => {\r\n  if (lastMessageRef.current) {\r\n    lastMessageRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n  }\r\n}, [newData]);\r\n  function HandelMessage(e ,data){\r\n    e.preventDefault()\r\n    dispatch(addMessage(data));\r\n    setForm({...form , text: ''})\r\n  }\r\n  function HandelEomji(e){\r\n    setForm(prevForm => ({\r\n      ...prevForm,\r\n      text: prevForm.text + e.emoji\r\n    }));\r\n    \r\n    setActive(false)\r\n\r\n}\r\n  return (\r\n    <>\r\n      {loading2 === \"pending\" ? (\r\n        <LoadingPage />\r\n      ) : (\r\n        <>\r\n          <div className=\"chat-container\">\r\n          {newData.map((item, index) => (\r\n            <div key={index} ref={index === newData.length - 1 ? lastMessageRef : null}>\r\n              {item}\r\n            </div>\r\n          ))}\r\n            </div>\r\n          <div className=\"message-box\">\r\n            <form style={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <div style={{backgroundColor: theme.palette.primary.main}} className=\"message-content\">\r\n              <div className='emoji'>\r\n                <SentimentSatisfiedAltIcon className='emo' onClick={(e)=>{setActive(prev => !prev)}} />\r\n                <div className='piker'>\r\n                  <EmojiPicker style={{height: '350px' ,width: '300px'}} open={active} onEmojiClick={HandelEomji} />\r\n                </div>\r\n              </div>\r\n                <input type=\"text\" name=\"text\" placeholder=\"message\" value={form.text} onChange={(e)=>{setForm({...form , text:e.target.value})}} />\r\n                <AttachFileIcon />\r\n                <KeyboardVoiceIcon />\r\n              </div>\r\n              <button onClick={(e)=>{HandelMessage(e , form)}} style={{ marginLeft: \"1rem\" }} className=\"micro\">\r\n                <SendIcon />\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import Image from '../../../../Img/about-coach.jpg'\r\nimport { useDispatch } from \"react-redux\";\r\nimport { SetOpenClose, SetParams } from \"../../../../Redux/Mode/ModeSlice\";\r\nimport { memo } from 'react';\r\n\r\nconst Content = memo(({chat})=>{\r\n  const dispatch = useDispatch()\r\n    return(\r\n        <div onClick={()=>{dispatch(SetParams(chat.id));dispatch(SetOpenClose())}} className=\"chat-box\" id=\"Msg\">\r\n            <div className=\"chat-img\">\r\n              <img src={Image} alt=\"\" />\r\n            </div>\r\n            <div className=\"chat-details\">\r\n              <div className=\"chat-title\">\r\n                <h3>{chat.f_name}</h3>\r\n                <span>06:04 PM</span>\r\n              </div>\r\n              <div className=\"chat-msg\">\r\n                <p>{chat.lastMessage}</p>\r\n                <span>1</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n    )\r\n})\r\nexport default Content","import Skeleton from \"@mui/material/Skeleton\";\r\nimport Stack from \"@mui/material/Stack\";\r\n\r\nexport default function ChatSkeleton() {\r\n  const numberRender = Array(5)\r\n    .fill(0)\r\n    .map((_, index) => {\r\n      return (\r\n        <div key={index} style={{ display: \"flex\", alignItems: \"center\" , marginLeft: '1rem' }}>\r\n          <Stack\r\n            spacing={1}\r\n            style={{\r\n              marginRight: \"2rem\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Skeleton\r\n              variant=\"rounded\"\r\n              sx={{ borderRadius: \"50%\" }}\r\n              width={50}\r\n              height={50}\r\n            />\r\n          </Stack>\r\n          <Stack spacing={1} style={{ flex: \"1\" }}>\r\n            <Skeleton variant=\"text\" width={150} sx={{ fontSize: \"1rem\" }} />\r\n            <Skeleton variant=\"text\" width={150} sx={{ fontSize: \"1rem\" }} />\r\n          </Stack>\r\n        </div>\r\n      );\r\n    });\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        gap:'2rem' ,\r\n        flexDirection: \"column\",\r\n      }}\r\n    >\r\n      {numberRender}\r\n    </div>\r\n  );\r\n}\r\n","import Skeleton from \"@mui/material/Skeleton\";\r\nimport Stack from \"@mui/material/Stack\";\r\n\r\nexport default function HeaderChatSkeleton() {\r\n  return (\r\n    <div style={{ display: \"flex\", alignItems: \"center\", marginLeft: \"1rem\" }}>\r\n      <Stack\r\n        spacing={1}\r\n        style={{\r\n          marginRight: \"2rem\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <Skeleton\r\n          variant=\"rounded\"\r\n          sx={{ borderRadius: \"50%\" }}\r\n          width={50}\r\n          height={50}\r\n        />\r\n      </Stack>\r\n      <Stack spacing={1} style={{ flex: \"1\" }}>\r\n        <Skeleton variant=\"text\" width={150} sx={{ fontSize: \"1rem\" }} />\r\n        <Skeleton variant=\"text\" width={150} sx={{ fontSize: \"1rem\" }} />\r\n      </Stack>\r\n    </div>\r\n  );\r\n}\r\n","import ChatSkeleton from \"../Skeleton/ChatSkeleton\";\r\nimport HeaderChatSkeleton from \"../Skeleton/HeaderChatSkeleton\";\r\n\r\nexport default function SkeletonLoading({loading , error ='' , children , type}){\r\n    const typeLoading = {\r\n        chat: ChatSkeleton ,\r\n        headerChat: HeaderChatSkeleton\r\n    }\r\n    const Component = typeLoading[type];\r\n    if (loading === 'pending') {\r\n        return <Component />    \r\n    }\r\n    if (loading === 'failed') {\r\n        return \"error\"\r\n    }\r\n    return(\r\n        <>{children}</>\r\n    )\r\n\r\n}","import \"../Chat.css\";\r\nimport \"./SideBar.css\";\r\nimport CreateIcon from \"@mui/icons-material/Create\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { memo, useCallback, useEffect, useState } from \"react\";\r\nimport { ActGetChat } from \"../../../Redux/Chat/ChatSlice\";\r\nimport Content from \"./Content/Content\";\r\nimport SkeletonLoading from \"../../SkeletonLoading/SkeletonLoading\";\r\nimport BrightnessMediumIcon from '@mui/icons-material/BrightnessMedium';\r\nimport Brightness4Icon from '@mui/icons-material/Brightness4';\r\nimport { SetMode, SetOpen } from \"../../../Redux/Mode/ModeSlice\";\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { useTheme } from \"@emotion/react\";\r\nconst SideBar = memo(()=> {\r\n  const theme = useTheme();\r\n  const dispatch = useDispatch()\r\n  const { myChats , loading } = useSelector((state) => state.chat)\r\n  const { value , open } = useSelector((state)  => state.mode)\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const filteredChats = searchTerm\r\n  ? myChats.filter(chat => \r\n      chat.f_name.toLowerCase().includes(searchTerm.toLowerCase()) \r\n    )\r\n  : myChats;\r\n  const newData = filteredChats.map((chat) => {\r\n    return(\r\n      <Content key={chat.id} chat={chat} />\r\n    )\r\n  })\r\n  useEffect(()=>{\r\n    dispatch(ActGetChat());\r\n  } ,[dispatch])\r\n  const handleSearchChange = useCallback((e) => {\r\n    setSearchTerm(e.target.value);\r\n  }, []);\r\n  const modeValue = (value === 'light') ? 'dark' : 'light'\r\n  return (\r\n    <div style={{backgroundColor: theme.palette.primary.main}} className={open ? \"right-side open\" : 'right-side'}>\r\n      <div className=\"before\"></div>\r\n      <div style={{backgroundColor: theme.palette.primary.main,}}  className=\"header-container\">\r\n        <div className=\"chat_header\">\r\n          <div className=\"toggle-button\" onClick={()=>{dispatch(SetMode(modeValue))}}>\r\n            {value === 'light' ? <BrightnessMediumIcon /> : <Brightness4Icon />}\r\n          </div>\r\n          <div className={value === 'dark' ? \"dark search-box\" : \"light search-box\"}>\r\n            <SearchIcon />\r\n            <input value={searchTerm} onChange={handleSearchChange} type=\"text\" placeholder=\"Search\" />\r\n          </div>\r\n          <CloseIcon className=\"close\" onClick={()=>{dispatch(SetOpen())}}/>\r\n        </div>\r\n      </div>\r\n      <div className=\"body-container\">\r\n        <div className=\"chat-list\">\r\n        <SkeletonLoading loading={loading} type=\"chat\">\r\n          {newData}\r\n        </SkeletonLoading>\r\n        </div>\r\n      </div>\r\n      <div className=\"pen\">\r\n        <CreateIcon />\r\n      </div>\r\n    </div>\r\n  );\r\n})\r\nexport default SideBar","import { styled } from \"@mui/material/styles\";\r\nconst Components = () =>{\r\n    const MyComponentHeroSubtitle = styled(\"p\")(({ theme }) => ({\r\n        backgroundColor: theme.palette.primary.secondy,\r\n      }));\r\n      const MyComponentHeroSubtitleH3 = styled(\"h3\")(({ theme }) => ({\r\n        color: theme.palette.primary.light,\r\n      }));\r\n      const MyComponentHeroSubtitleA = styled(\"a\")(({ theme }) => ({\r\n        backgroundColor: theme.palette.primary.secondy,\r\n      }));\r\n      const MyComponentHeader = styled(\"header\")(({ theme }) => ({\r\n        color: \"#fff\",\r\n        backgroundColor: theme.palette.primary.main,\r\n      }));\r\n      const MyComponentDivHeader = styled(\"div\")(({ theme }) => ({\r\n        backgroundColor: theme.palette.primary.main,\r\n      }));\r\n      const MyComponentTitle = styled(\"h1\")(({ theme }) => ({\r\n        color: theme.palette.primary.title,\r\n      }));\r\n      const MyComponentTextP = styled(\"p\")(({ theme }) => ({\r\n        color: theme.palette.primary.contrastText,\r\n      }));\r\n      const MyComponentContainerLoader = styled(\"div\")(({ theme }) => ({\r\n        background: theme.palette.primary.bg,\r\n      }));\r\n    return { MyComponentDivHeader , MyComponentContainerLoader , MyComponentHeroSubtitleH3 , MyComponentHeroSubtitle , MyComponentHeader , MyComponentTitle , MyComponentTextP , MyComponentHeroSubtitleA }  \r\n}\r\nexport default Components","import \"./Chat.css\";\r\nimport Content from \"../../Components/Chat/Content/Content\";\r\nimport SideBar from \"../../Components/Chat/SideBar/SideBar\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport PhoneIcon from \"@mui/icons-material/Phone\";\r\nimport HorizontalSplitIcon from \"@mui/icons-material/HorizontalSplit\";\r\nimport Components from \"../../Style/Components/Components\";\r\nimport Image from '../../Img/about-coach.jpg'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { ActShow } from \"../../Redux/Chat/ChatSlice\";\r\nimport SkeletonLoading from \"../../Components/SkeletonLoading/SkeletonLoading\";\r\nimport { SetOpen } from \"../../Redux/Mode/ModeSlice\";\r\nexport default function Chat() {\r\n  const { MyComponentDivHeader } = Components();\r\n  const { params } = useSelector((state)=> state.mode)\r\n  const dispatch = useDispatch()\r\n  const { myChat , loading3 } = useSelector((state) => state.chat)\r\n  useEffect(() => {\r\n    dispatch(ActShow(params))\r\n  } ,[dispatch , params])\r\n  const { value } = useSelector((state) => state.mode);\r\n  return (\r\n    <main className=\"chat\">\r\n      <SideBar />\r\n      <section\r\n        className={\r\n          value === \"light\" ? \"chat_content light\" : \"chat_content dark\"\r\n        }\r\n      >\r\n        <div className=\"chat_container\" id=\"chatBox\">\r\n          <MyComponentDivHeader className=\"content-header\">\r\n            <HorizontalSplitIcon\r\n              className=\"barsChat\"\r\n              onClick={()=>{dispatch(SetOpen())}}\r\n              style={{ fontSize: \"3rem\" }}\r\n            />\r\n            <SkeletonLoading loading={loading3} type=\"headerChat\">\r\n              <div className=\"image\">\r\n                <img\r\n                  src={Image}\r\n                  alt=\"\"\r\n                />\r\n              </div>\r\n              <div className=\"details\">\r\n                <h3>{myChat.f_name}</h3>\r\n                <span>last seen 10 minutes ago</span>\r\n              </div>\r\n            </SkeletonLoading>\r\n            <div className=\"icons\">\r\n              <PhoneIcon />\r\n              <SearchIcon />\r\n            </div>\r\n          </MyComponentDivHeader>\r\n          <Content id={params} />\r\n        </div>\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n"],"names":["LoadingPage","_jsxs","class","children","_jsx","Content","_ref","id","theme","useTheme","active","setActive","useState","form","setForm","chat_id","is_f","f_id","text","value","useSelector","state","mode","dispatch","useDispatch","messages","loading2","chat","lastMessageRef","useRef","useEffect","ActGetMessages","newData","map","message","className","current","scrollIntoView","behavior","_Fragment","item","index","ref","length","style","display","alignItems","backgroundColor","palette","primary","main","SentimentSatisfiedAltIcon","onClick","e","prev","EmojiPicker","height","width","open","onEmojiClick","prevForm","emoji","type","name","placeholder","onChange","target","AttachFileIcon","KeyboardVoiceIcon","data","preventDefault","addMessage","HandelMessage","marginLeft","SendIcon","memo","SetParams","SetOpenClose","src","Image","alt","f_name","lastMessage","ChatSkeleton","numberRender","Array","fill","_","Stack","spacing","marginRight","justifyContent","Skeleton","variant","sx","borderRadius","flex","fontSize","gap","flexDirection","HeaderChatSkeleton","SkeletonLoading","loading","error","Component","headerChat","myChats","searchTerm","setSearchTerm","filter","toLowerCase","includes","ActGetChat","handleSearchChange","useCallback","modeValue","SetMode","BrightnessMediumIcon","Brightness4Icon","SearchIcon","CloseIcon","SetOpen","CreateIcon","Components","MyComponentHeroSubtitle","styled","secondy","MyComponentHeroSubtitleH3","_ref2","color","light","MyComponentHeroSubtitleA","_ref3","MyComponentHeader","_ref4","MyComponentDivHeader","_ref5","MyComponentTitle","_ref6","title","MyComponentTextP","_ref7","contrastText","MyComponentContainerLoader","_ref8","background","bg","Chat","params","myChat","loading3","ActShow","SideBar","HorizontalSplitIcon","PhoneIcon"],"sourceRoot":""}